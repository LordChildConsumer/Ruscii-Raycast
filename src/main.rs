use ruscii::app::{App, State};
use ruscii::terminal::Window;
use ruscii::drawing::Pencil;
use ruscii::keyboard::{KeyEvent, Key};

fn main() {
    let mut app = App::default();

    ////////////////////////////////////////////////////////////////
    ////  -----------------  Initialization  -----------------  ////
    ////////////////////////////////////////////////////////////////



    
    app.run(|app_state: &mut State, window: &mut Window| {
        ////////////////////////////////////////////////////////////////
        ////  -----------------  Keyboard Input  -----------------  ////
        ////////////////////////////////////////////////////////////////
        
        for key_event in app_state.keyboard().last_key_events() {
            match key_event {
                KeyEvent::Pressed(Key::Esc) => app_state.stop(),
                _ => (),
            }
        }




        ////////////////////////////////////////////////////////////////
        ////  ---------------------  Update  ---------------------  ////
        ////////////////////////////////////////////////////////////////




        ////////////////////////////////////////////////////////////////
        ////  ----------------------  Draw  ----------------------  ////
        ////////////////////////////////////////////////////////////////
        
        let mut pencil = Pencil::new(window.canvas_mut());
    });
}